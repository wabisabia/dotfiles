complete -c rg -n '__fish_use_subcommand' -s e -l 'regexp' -d 'A pattern to search for.'
complete -c rg -n '__fish_use_subcommand' -s f -l 'file' -d 'Search for patterns from the given file.'
complete -c rg -n '__fish_use_subcommand' -s A -l 'after-context' -d 'Show NUM lines after each match.'
complete -c rg -n '__fish_use_subcommand' -s B -l 'before-context' -d 'Show NUM lines before each match.'
complete -c rg -n '__fish_use_subcommand'  -l 'binary' -d 'Search binary files.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-binary' -d 'Search binary files.'
complete -c rg -n '__fish_use_subcommand'  -l 'block-buffered' -d 'Force block buffering.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-block-buffered' -d 'Force block buffering.'
complete -c rg -n '__fish_use_subcommand' -s b -l 'byte-offset' -d 'Print the byte offset for each matching line.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-byte-offset' -d 'Print the byte offset for each matching line.'
complete -c rg -n '__fish_use_subcommand' -s s -l 'case-sensitive' -d 'Search case sensitively (default).'
complete -c rg -n '__fish_use_subcommand'  -l 'color' -d 'When to use color.' -r -f -a 'never auto always ansi'
complete -c rg -n '__fish_use_subcommand'  -l 'colors' -d 'Configure color settings and styles.'
complete -c rg -n '__fish_use_subcommand'  -l 'column' -d 'Show column numbers.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-column' -d 'Show column numbers.'
complete -c rg -n '__fish_use_subcommand' -s C -l 'context' -d 'Show NUM lines before and after each match.'
complete -c rg -n '__fish_use_subcommand'  -l 'context-separator' -d 'Set the separator for contextual chunks.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-context-separator' -d 'Set the separator for contextual chunks.'
complete -c rg -n '__fish_use_subcommand' -s c -l 'count' -d 'Show count of matching lines for each file.'
complete -c rg -n '__fish_use_subcommand'  -l 'count-matches' -d 'Show count of every match for each file.'
complete -c rg -n '__fish_use_subcommand'  -l 'crlf' -d 'Use CRLF line terminators (nice for Windows).'
complete -c rg -n '__fish_use_subcommand'  -l 'no-crlf' -d 'Use CRLF line terminators (nice for Windows).'
complete -c rg -n '__fish_use_subcommand'  -l 'debug' -d 'Show debug messages.'
complete -c rg -n '__fish_use_subcommand'  -l 'dfa-size-limit' -d 'The upper size limit of the regex DFA.'
complete -c rg -n '__fish_use_subcommand' -s E -l 'encoding' -d 'Specify the text encoding of files to search.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-encoding' -d 'Specify the text encoding of files to search.'
complete -c rg -n '__fish_use_subcommand'  -l 'engine' -d 'Specify which regex engine to use.' -r -f -a 'default pcre2 auto'
complete -c rg -n '__fish_use_subcommand'  -l 'field-context-separator' -d 'Set the field context separator.'
complete -c rg -n '__fish_use_subcommand'  -l 'field-match-separator' -d 'Set the field match separator.'
complete -c rg -n '__fish_use_subcommand'  -l 'files' -d 'Print each file that would be searched.'
complete -c rg -n '__fish_use_subcommand' -s l -l 'files-with-matches' -d 'Print the paths with at least one match.'
complete -c rg -n '__fish_use_subcommand'  -l 'files-without-match' -d 'Print the paths that contain zero matches.'
complete -c rg -n '__fish_use_subcommand' -s F -l 'fixed-strings' -d 'Treat all patterns as literals.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-fixed-strings' -d 'Treat all patterns as literals.'
complete -c rg -n '__fish_use_subcommand' -s L -l 'follow' -d 'Follow symbolic links.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-follow' -d 'Follow symbolic links.'
complete -c rg -n '__fish_use_subcommand'  -l 'generate' -d 'Generate man pages and completion scripts.' -r -f -a 'man complete-bash complete-zsh complete-fish complete-powershell'
complete -c rg -n '__fish_use_subcommand' -s g -l 'glob' -d 'Include or exclude file paths.'
complete -c rg -n '__fish_use_subcommand'  -l 'glob-case-insensitive' -d 'Process all glob patterns case insensitively.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-glob-case-insensitive' -d 'Process all glob patterns case insensitively.'
complete -c rg -n '__fish_use_subcommand'  -l 'heading' -d 'Print matches grouped by each file.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-heading' -d 'Print matches grouped by each file.'
complete -c rg -n '__fish_use_subcommand' -s h -l 'help' -d 'Show help output.'
complete -c rg -n '__fish_use_subcommand' -s . -l 'hidden' -d 'Search hidden files and directories.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-hidden' -d 'Search hidden files and directories.'
complete -c rg -n '__fish_use_subcommand'  -l 'hostname-bin' -d 'Run a program to get this system\'s hostname.'
complete -c rg -n '__fish_use_subcommand'  -l 'hyperlink-format' -d 'Set the format of hyperlinks.'
complete -c rg -n '__fish_use_subcommand'  -l 'iglob' -d 'Include/exclude paths case insensitively.'
complete -c rg -n '__fish_use_subcommand' -s i -l 'ignore-case' -d 'Case insensitive search.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-file' -d 'Specify additional ignore files.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-file-case-insensitive' -d 'Process ignore files case insensitively.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-file-case-insensitive' -d 'Process ignore files case insensitively.'
complete -c rg -n '__fish_use_subcommand'  -l 'include-zero' -d 'Include zero matches in summary output.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-include-zero' -d 'Include zero matches in summary output.'
complete -c rg -n '__fish_use_subcommand' -s v -l 'invert-match' -d 'Invert matching.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-invert-match' -d 'Invert matching.'
complete -c rg -n '__fish_use_subcommand'  -l 'json' -d 'Show search results in a JSON Lines format.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-json' -d 'Show search results in a JSON Lines format.'
complete -c rg -n '__fish_use_subcommand'  -l 'line-buffered' -d 'Force line buffering.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-line-buffered' -d 'Force line buffering.'
complete -c rg -n '__fish_use_subcommand' -s n -l 'line-number' -d 'Show line numbers.'
complete -c rg -n '__fish_use_subcommand' -s N -l 'no-line-number' -d 'Suppress line numbers.'
complete -c rg -n '__fish_use_subcommand' -s x -l 'line-regexp' -d 'Show matches surrounded by line boundaries.'
complete -c rg -n '__fish_use_subcommand' -s M -l 'max-columns' -d 'Omit lines longer than this limit.'
complete -c rg -n '__fish_use_subcommand'  -l 'max-columns-preview' -d 'Show preview for lines exceeding the limit.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-max-columns-preview' -d 'Show preview for lines exceeding the limit.'
complete -c rg -n '__fish_use_subcommand' -s m -l 'max-count' -d 'Limit the number of matching lines.'
complete -c rg -n '__fish_use_subcommand' -s d -l 'max-depth' -d 'Descend at most NUM directories.'
complete -c rg -n '__fish_use_subcommand'  -l 'max-filesize' -d 'Ignore files larger than NUM in size.'
complete -c rg -n '__fish_use_subcommand'  -l 'mmap' -d 'Search with memory maps when possible.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-mmap' -d 'Search with memory maps when possible.'
complete -c rg -n '__fish_use_subcommand' -s U -l 'multiline' -d 'Enable searching across multiple lines.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-multiline' -d 'Enable searching across multiple lines.'
complete -c rg -n '__fish_use_subcommand'  -l 'multiline-dotall' -d 'Make \'.\' match line terminators.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-multiline-dotall' -d 'Make \'.\' match line terminators.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-config' -d 'Never read configuration files.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore' -d 'Don\'t use ignore files.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore' -d 'Don\'t use ignore files.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-dot' -d 'Don\'t use .ignore or .rgignore files.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-dot' -d 'Don\'t use .ignore or .rgignore files.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-exclude' -d 'Don\'t use local exclusion files.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-exclude' -d 'Don\'t use local exclusion files.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-files' -d 'Don\'t use --ignore-file arguments.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-files' -d 'Don\'t use --ignore-file arguments.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-global' -d 'Don\'t use global ignore files.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-global' -d 'Don\'t use global ignore files.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-messages' -d 'Suppress gitignore parse error messages.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-messages' -d 'Suppress gitignore parse error messages.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-parent' -d 'Don\'t use ignore files in parent directories.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-parent' -d 'Don\'t use ignore files in parent directories.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-ignore-vcs' -d 'Don\'t use ignore files from source control.'
complete -c rg -n '__fish_use_subcommand'  -l 'ignore-vcs' -d 'Don\'t use ignore files from source control.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-messages' -d 'Suppress some error messages.'
complete -c rg -n '__fish_use_subcommand'  -l 'messages' -d 'Suppress some error messages.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-require-git' -d 'Use .gitignore outside of git repositories.'
complete -c rg -n '__fish_use_subcommand'  -l 'require-git' -d 'Use .gitignore outside of git repositories.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-unicode' -d 'Disable Unicode mode.'
complete -c rg -n '__fish_use_subcommand'  -l 'unicode' -d 'Disable Unicode mode.'
complete -c rg -n '__fish_use_subcommand' -s 0 -l 'null' -d 'Print a NUL byte after file paths.'
complete -c rg -n '__fish_use_subcommand'  -l 'null-data' -d 'Use NUL as a line terminator.'
complete -c rg -n '__fish_use_subcommand'  -l 'one-file-system' -d 'Skip directories on other file systems.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-one-file-system' -d 'Skip directories on other file systems.'
complete -c rg -n '__fish_use_subcommand' -s o -l 'only-matching' -d 'Print only matched parts of a line.'
complete -c rg -n '__fish_use_subcommand'  -l 'path-separator' -d 'Set the path separator for printing paths.'
complete -c rg -n '__fish_use_subcommand'  -l 'passthru' -d 'Print both matching and non-matching lines.'
complete -c rg -n '__fish_use_subcommand' -s P -l 'pcre2' -d 'Enable PCRE2 matching.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-pcre2' -d 'Enable PCRE2 matching.'
complete -c rg -n '__fish_use_subcommand'  -l 'pcre2-version' -d 'Print the version of PCRE2 that ripgrep uses.'
complete -c rg -n '__fish_use_subcommand'  -l 'pre' -d 'Search output of COMMAND for each PATH.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-pre' -d 'Search output of COMMAND for each PATH.'
complete -c rg -n '__fish_use_subcommand'  -l 'pre-glob' -d 'Include or exclude files from a preprocessor.'
complete -c rg -n '__fish_use_subcommand' -s p -l 'pretty' -d 'Alias for colors, headings and line numbers.'
complete -c rg -n '__fish_use_subcommand' -s q -l 'quiet' -d 'Do not print anything to stdout.'
complete -c rg -n '__fish_use_subcommand'  -l 'regex-size-limit' -d 'The size limit of the compiled regex.'
complete -c rg -n '__fish_use_subcommand' -s r -l 'replace' -d 'Replace matches with the given text.'
complete -c rg -n '__fish_use_subcommand' -s z -l 'search-zip' -d 'Search in compressed files.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-search-zip' -d 'Search in compressed files.'
complete -c rg -n '__fish_use_subcommand' -s S -l 'smart-case' -d 'Smart case search.'
complete -c rg -n '__fish_use_subcommand'  -l 'sort' -d 'Sort results in ascending order.' -r -f -a 'none path modified accessed created'
complete -c rg -n '__fish_use_subcommand'  -l 'sortr' -d 'Sort results in descending order.' -r -f -a 'none path modified accessed created'
complete -c rg -n '__fish_use_subcommand'  -l 'stats' -d 'Print statistics about the search.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-stats' -d 'Print statistics about the search.'
complete -c rg -n '__fish_use_subcommand'  -l 'stop-on-nonmatch' -d 'Stop searching after a non-match.'
complete -c rg -n '__fish_use_subcommand' -s a -l 'text' -d 'Search binary files as if they were text.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-text' -d 'Search binary files as if they were text.'
complete -c rg -n '__fish_use_subcommand' -s j -l 'threads' -d 'Set the approximate number of threads to use.'
complete -c rg -n '__fish_use_subcommand'  -l 'trace' -d 'Show trace messages.'
complete -c rg -n '__fish_use_subcommand'  -l 'trim' -d 'Trim prefix whitespace from matches.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-trim' -d 'Trim prefix whitespace from matches.'
complete -c rg -n '__fish_use_subcommand' -s t -l 'type' -d 'Only search files matching TYPE.'
complete -c rg -n '__fish_use_subcommand' -s T -l 'type-not' -d 'Do not search files matching TYPE.'
complete -c rg -n '__fish_use_subcommand'  -l 'type-add' -d 'Add a new glob for a file type.'
complete -c rg -n '__fish_use_subcommand'  -l 'type-clear' -d 'Clear globs for a file type.'
complete -c rg -n '__fish_use_subcommand'  -l 'type-list' -d 'Show all supported file types.'
complete -c rg -n '__fish_use_subcommand' -s u -l 'unrestricted' -d 'Reduce the level of "smart" filtering.'
complete -c rg -n '__fish_use_subcommand' -s V -l 'version' -d 'Print ripgrep\'s version.'
complete -c rg -n '__fish_use_subcommand'  -l 'vimgrep' -d 'Print results im a vim compatible format.'
complete -c rg -n '__fish_use_subcommand' -s H -l 'with-filename' -d 'Print the file path with each matching line.'
complete -c rg -n '__fish_use_subcommand' -s I -l 'no-filename' -d 'Never print the path with each matching line.'
complete -c rg -n '__fish_use_subcommand' -s w -l 'word-regexp' -d 'Show matches surrounded by word boundaries.'
complete -c rg -n '__fish_use_subcommand'  -l 'auto-hybrid-regex' -d '(DEPRECATED) Use PCRE2 if appropriate.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-auto-hybrid-regex' -d '(DEPRECATED) Use PCRE2 if appropriate.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-pcre2-unicode' -d '(DEPRECATED) Disable Unicode mode for PCRE2.'
complete -c rg -n '__fish_use_subcommand'  -l 'pcre2-unicode' -d '(DEPRECATED) Disable Unicode mode for PCRE2.'
complete -c rg -n '__fish_use_subcommand'  -l 'sort-files' -d '(DEPRECATED) Sort results by file path.'
complete -c rg -n '__fish_use_subcommand'  -l 'no-sort-files' -d '(DEPRECATED) Sort results by file path.'
